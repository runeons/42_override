struct SMessage
{
    char msg[140]; // 
    char username[40]; // + 140 //username[40] reecrit lenght << exploit ! 
    int lengthMsg; // + 180
}

int main()
{
    puts ("--------------------------------------------\n|   ~Welcome to l33t-m$n ~    v1337        |\n--------------------------------------------");
    handle_msg();
    return 0;
}

void handle_msg(void)
{
    struct SMessage sMsg;
    sMsg.lengthMsg = 140;  // old size sMsg twitter
    set_username(sMsg);
    set_msg(sMsg);
    puts(">: Msg sent!");
    return;
}

void set_username(SMessage *sMsg) //struct sur rdi dans rbp-0x98
{
    char buffer[128];
    int i = 0;

    bzero(buffer) // 16 x 8 buffer 40?! 
    puts(">: Enter your username");
    printf(">>:");
    fgets(&buffer, 128, stdin);
    while (i <= 40 && buffer[i] != '\0') // <= au lieu de <
    {
        //cbtw convert byte to word //BYTE PTR = msg
        sMsg.username[i] = buffer[i]; 
        i++;
    }
    printf(">: Welcome,%s", SMessage.username); // >: Welcome, felix
    return;
}

void set_msg(SMessage *sMsg)
{
    char *str;
    bzero(str);
    puts(">: Msg @Unix-Dude")
    printf(">>:");
    fgets(&str, 1024, stdin);
    strncpy(sMsg.msg, &str, sMsg.lengthMsg); // 0xb4 180
    return;
}


void secret_backdoor(void)
{
    char *string;
    
    fgets(&string, 128, stdin);
    system(&string); 
    return; 
}