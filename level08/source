void log_wrapper(FILE *log_file, char *step, char *file)
{
  size_t    len;
  char      buffer[264];
  
  strcpy(buffer, step); // copy step dans buffer
  snprintf(buffer + strlen(buffer), 254 - strlen(buffer), file); // ajooute file apres buffer
  len = strcspn(buffer,"\n"); // coupe \0 au premier \n
  buffer[len] = '\0';
  fprintf(log_file, "LOG: %s\n", buffer); // érit buffer dans .log
  return;
}

int main(int argc,char **argv)

{
  char  c_buffer;
  char  *prefixed_path;
  int   backup_file;
  FILE  *log_file;
  FILE  *token_file;
  int   ret;
  char  c;

  if (argc != 2) {
    printf("Usage: %s filename\n",*argv);
  }
  log_file = fopen("./backups/.log","w"); // ouvre .log en write => le crée s'il n'existe pas
  if (log_file == (FILE *)0x0) {
    printf("ERROR: Failed to open %s\n","./backups/.log");
    exit(1);
  }
  log_wrapper(log_file, "Starting back up: ", argv[1]);
  token_file = fopen(argv[1], "r"); // lit le fichier donné en paramètre
  if (token_file == (FILE *)0x0) {
    printf("ERROR: Failed to open %s\n",argv[1]);
    exit(1);
  }
  prefixed_path = "./backups/";
  strncat(prefixed_path, argv[1], 99 - strlen(prefixed_path)); // ajoute argv[1] à prefixed_path
  backup_file = open(prefixed_path, 193, 432); // ouvre ./backups/file en "w" mode, et rend level09 owner
  if (backup_file < 0) {
    printf("ERROR: Failed to open %s%s\n","./backups/", argv[1]);
    exit(1);
  }
  c = -1;
  while( true ) { // lit token_file et copie dans backup_file de ./backups/file
    ret = fgetc(token_file);
    c = (char)ret;
    if (c == -1)
        break;
    write(backup_file, &c ,1);
  }
  log_wrapper(log_file,"Finished back up ", argv[1]);
  fclose(token_file);
  close(backup_file);
  return 0;
}